import './App.css';
import React, { useState, useEffect } from 'react';
import axios from 'axios';

const months = [
  { name: '–°—ñ—á–µ–Ω—å', value: '01' },
  { name: '–õ—é—Ç–∏–π', value: '02' },
  { name: '–ë–µ—Ä–µ–∑–µ–Ω—å', value: '03' },
  { name: '–ö–≤—ñ—Ç–µ–Ω—å', value: '04' },
  { name: '–¢—Ä–∞–≤–µ–Ω—å', value: '05' },
  { name: '–ß–µ—Ä–≤–µ–Ω—å', value: '06' },
  { name: '–õ–∏–ø–µ–Ω—å', value: '07' },
  { name: '–°–µ—Ä–ø–µ–Ω—å', value: '08' },
  { name: '–í–µ—Ä–µ—Å–µ–Ω—å', value: '09' },
  { name: '–ñ–æ–≤—Ç–µ–Ω—å', value: '10' },
  { name: '–õ–∏—Å—Ç–æ–ø–∞–¥', value: '11' },
  { name: '–ì—Ä—É–¥–µ–Ω—å', value: '12' },
];

function App() {
  const [selectedMonth, setSelectedMonth] = useState('01');
  const [price, setPrice] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchPrice = async () => {
      try {
        const API_KEY = 'eUJcWtfa8yXr0CSf1f9RQYbFpmsgbtDFP0DgAIYU';
        const response = await axios.get('https://api.eia.gov/v2/seriesid/PET.RBRTE.M', {
          params: {
            api_key: API_KEY,
          },
        });

        const data = response.data.response.data;

        const match = data.find(entry => entry.period.startsWith('2025') && entry.period.endsWith(selectedMonth));

        if (!match) {
          setPrice(null);
          setError('–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –∑–∞ –æ–±—Ä–∞–Ω–∏–π –º—ñ—Å—è—Ü—å');
        } else {
          setPrice(match.value);
          setError(null);
        }
      } catch (err) {
        console.error(err);
        setError('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ EIA');
        setPrice(null);
      }
    };

    fetchPrice();
  }, [selectedMonth]);

  return (
    <div className="App">
      <h1 id="Title">–ö–æ—Ç–∏—Ä—É–≤–∞–Ω–Ω—è Brent –∑–∞ 2025 —Ä—ñ–∫ üåçüõ¢</h1>
      <select onChange={(e) => setSelectedMonth(e.target.value)} value={selectedMonth}>
        {months.map((month) => (
          <option key={month.value} value={month.value}>
            {month.name}
          </option>
        ))}
      </select>
      {error && <p style={{ color: 'red' }}>{error}</p>}
      {price && <p style={{ color: 'aliceblue' }}>–°–µ—Ä–µ–¥–Ω—è —Ü—ñ–Ω–∞: {price} USD/–±–∞—Ä–µ–ª—å</p>}
    </div>
  );
}

export default App;
